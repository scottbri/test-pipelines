resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: azure-blob
  type: docker-image
  source:
    repository: cfcloudops/azure-blobstore-concourse-resource

resources:
- name: daily
  type: time
  source:
    interval: 24h

- name: config
  type: git
  source:
    #private_key: ((configuration.private_key))
    #uri: ((configuration.uri))
    uri: https://github.com/scottbri/test-pipelines
    branch: master
    submodules: all
    depth: 1

- name: healthwatch-product
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: p-healthwatch-(.*).pivotal
    environment: AzureCloud

- name: healthwatch-stemcell
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: healthwatch-stemcell/bosh-stemcell-(.*)-azure.*\.tgz
    environment: AzureCloud

- name: opsman-product
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: pcf-azure-(.*).pivotal
    environment: AzureCloud

- name: pas-product
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: cf-(.*).pivotal
    environment: AzureCloud

- name: pas-stemcell
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: pas-stemcell/bosh-stemcell-(.*)-azure.*\.tgz
    environment: AzureCloud

- name: pas-windows-product
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: pas-windows-(.*).pivotal
    environment: AzureCloud

- name: platform-automation-pivnet
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: 2\.(.*)
    sort_by: semver

- name: platform-automation-tasks
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: platform-automation-tasks-(.*).zip
    environment: AzureCloud

- name: platform-automation-image
  type: azure-blob
  source:
    storage_account_name: ((azure-storage-account-name))
    storage_access_key: ((azure-storage-access-key))
    container: ((azure-storage-container))
    regexp: platform-automation-image-(.*).tgz
    environment: AzureCloud

jobs:
- name: fetch-healthwatch
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: '/pipeline/azure/prodlab'
      INTERPOLATION_PATH: "download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-healthwatch-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product-configs/healthwatch.yml
    output_mapping: {downloaded-stemcell: healthwatch-stemcell}
  - aggregate:
    - put: healthwatch-product
      params:
        file: downloaded-product/*.pivotal
    - put: healthwatch-stemcell
      params:
        file: healthwatch-stemcell/*.tgz

- name: fetch-opsman
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: '/pipeline/azure/prodlab'
      INTERPOLATION_PATH: "download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-opsman-image
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product-configs/opsman.yml
  - aggregate:
    - put: opsman-product
      params:
        file: downloaded-product/*

- name: fetch-pas
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: '/pipeline/azure/prodlab'
      INTERPOLATION_PATH: "download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-pas-product-and-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product-configs/pas.yml
    output_mapping: {downloaded-stemcell: pas-stemcell}
  - aggregate:
    - put: pas-product
      params:
        file: downloaded-product/*.pivotal
    - put: pas-stemcell
      params:
        file: pas-stemcell/*.tgz

- name: fetch-pas-windows
  plan:
  - aggregate:
    - get: daily
      trigger: true
    - get: platform-automation-image
      params:
        unpack: true
    - get: platform-automation-tasks
      params:
        unpack: true
    - get: config
  - task: credhub-interpolate
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      PREFIX: '/pipeline/azure/prodlab'
      INTERPOLATION_PATH: "download-product-configs"
    input_mapping:
      files: config
    output_mapping:
      interpolated-files: config
  - task: download-pas-windows-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product-configs/pas-windows.yml
  - aggregate:
    - put: pas-windows-product
      params:
        file: downloaded-product/*.pivotal

- name: fetch-platform-automation
  # We use the pivnet resource to bootstrap the pipeline,
  # and because this product is part of the pipeline, not the foundation
  plan:
  - get: platform-automation-pivnet
    trigger: true
  - aggregate:
    - put: platform-automation-tasks
      params:
        file: platform-automation-pivnet/*tasks*.zip
    - put: platform-automation-image
      params:
        file: platform-automation-pivnet/*image*.tgz